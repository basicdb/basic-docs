openapi: 3.0.0
info:
  title: Basic Server API
  version: 1.0.0

paths:
  /account:
    get:
      summary: Account
      responses:
        '200':
          description: Successful response

  /account/apps:
    get:
      summary: Get Apps
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []

  /account/projects:
    get:
      summary: Get Projects  
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}:
    get:
      summary: Get Project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}/profile:
    get:
      summary: Get Profile
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}/key:
    get:
      summary: Get Key
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /v2/project/new:
    post:
      summary: New Project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '200':
          description: Successful response
          
  /v2/project/{project_id}:
    post:
      summary: Update Project
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}/schema:
    get:
      summary: Get Schema
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
    post:
      summary: Update Schema
      parameters:
        - in: path
          name: project_id 
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSchema'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}/db/{account_id}/{table_name}:
    get:
      summary: Get Items
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: account_id
          required: true
          schema:
            type: string
        - in: path
          name: table_name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
    post:
      summary: Add Item
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path 
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: table_name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddItem'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /project/{project_id}/db/{account}/{table_name}/{item_id}:
    patch:
      summary: Update Item
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: table_name
          required: true
          schema:
            type: string
        - in: path
          name: item_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateItem'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
    put:
      summary: Set Item
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: table_name
          required: true
          schema:
            type: string
        - in: path
          name: item_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetItem'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
    delete:
      summary: Del Item
      parameters:
        - in: path
          name: project_id
          required: true
          schema:
            type: string
        - in: path
          name: account
          required: true
          schema:
            type: string
        - in: path
          name: table_name
          required: true
          schema:
            type: string
        - in: path
          name: item_id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteItem'
      responses:
        '200':
          description: Successful response
      security:
        - bearerAuth: []
        
  /auth/authorize:
    get:
      summary: Authorize
      parameters:
        - in: query
          name: client_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
      security:
        - oauth2:
            - authorization_code
            
    post:
      summary: Authorize
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeRequest'
      responses:
        '200':
          description: Successful response
              
  /auth/userInfo:
    get:
      summary: User Info
      responses:
        '200':
          description: Successful response
      security:
        - oauth2:
            - authorization_code
            
  /auth/token:
    post:
      summary: Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: Successful response

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /auth/authorize
          tokenUrl: /auth/token
          scopes:
            profile: Access profile
            email: Access email
            
  schemas:
    NewProject:
      type: object
      properties:
        name:
          type: string
        slug: 
          type: string
        owner_id:
          type: string
          
    UpdateProject:
      type: object 
      properties:
        data:
          type: object
          properties:
            website:
              type: string
            is_public:
              type: boolean
              
    UpdateSchema:
      type: object
      properties:
        schema:
          type: object
          properties:
            tables:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    
    AddItem:
      type: object
      properties:
        value:
          type: object
          
    UpdateItem:
      type: object
      properties:
        value:
          type: object
          
    SetItem:
      type: object
      properties:
        value:
          type: object
          
    DeleteItem:
      type: object
      properties:
        value:
          type: object
          
    AuthorizeRequest:
      type: object
      properties:
        client_id:
          type: string
        user_id:
          type: string
        redirect_uri:
          type: string
        scope:
          type: string
          
    TokenRequest:
      type: object 
      properties:
        code:
          type: string
